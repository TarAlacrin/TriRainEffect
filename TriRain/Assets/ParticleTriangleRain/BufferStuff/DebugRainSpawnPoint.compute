// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
#include "Assets/ComputeInc/ComputeIncludes.cginc"
int _VertexCount;
float _Time;

AppendStructuredBuffer<int> _OutSpawnIndecies;

void SpawnAt(uint id)
{
	_OutSpawnIndecies.Append(id);
}

float rand_1_05(float uv)
{
	float2 noise = (frac(sin(dot(float2(uv, _VertexCount*0.23541), float2(12.9898, 78.233)*2.0)) * 43758.5453));
	return abs(noise.x + noise.y) * 0.5;
}



[numthreads(THREADSIZE,1,1)]
void CSMain (uint id : SV_DispatchThreadID)
{
	uint index = Index(id) % _VertexCount;
	float rand = rand_1_05(index * (_Time%881));

	if (rand > 0.95)
		SpawnAt(index);
}
