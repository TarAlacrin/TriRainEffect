// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
#include "Assets/ComputeInc/ComputeIncludes.cginc"

StructuredBuffer<float2> _AppendedSpawnIds;
uint _SpawnCount;
RWTexture2D<float4> _TextureSpawnIds;

[numthreads(8,8,1)]//change to 1,1,1 and have the compute dispatch SpawnCount number of threadgroups. Gross.
//I need the ids to be lined up at the start of the outputted texture. so just have a check index < 
void CSMain (uint3 id : SV_DispatchThreadID)
{
	uint index = Index(id);
	float2 coords = Coord(index).xy;

	uint appendix = index % _SpawnCount;
	_TextureSpawnIds[coords.xy] = _AppendedSpawnIds[appendix].xyxy;//EncodeFloatRGBA( _AppendedSpawnIds[appendix]); //float4(id.x & id.y, (id.x & 15) / 15.0, (id.y & 15) / 15.0, 0.0);
}
